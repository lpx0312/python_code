# 字符串 ：一块连续的空间，每个空间都存的是一个 字符（并不是字符串哈）
# 列表list：一块连续的空间，每个空间可以存任意数据类型 ['张三', True, '王五', '王二麻子', 2]
# 列表也是序列：因为是连续的存储空间

# 创建列表
names = []

#创建列表并赋值

names1 = ["张三","李四","王五","王二麻子"]
# # 使用切片来做翻转，是 浅拷贝，有返回值，直接返回新的列表
# print(names1[::-1])
# # names1.reverse() 的 reverse的翻转，没有返回值，是直接对原列表进行翻转
# names1.reverse()
# print(names1)

# 如果列表中的是数字，则可以直接使用sort排序和倒序

# 给汉字字符串排序 没有意义
names1.sort()
print(names1)  # #['张三', '李四', '王二麻子', '王五']

# 可以给单英文字符或者英文字符串进行排序。
# names1 = ["b","a","d","c"]
# names1.sort()
# print(names1)   # ['a', 'b', 'c', 'd']
#
# names1.sort(reverse=True) #倒序
# print(names1)   # ['d','c','b','a']

# names1 = ["ba","ab","db","cd"]
# names1.sort()
# print(names1)   # ['ab', 'ba', 'cd', 'db']


# 因为列表是序列 故支持三种特性：
# 1.索引(注意负索引)
# 2.切片
#    ①前闭后开
#    ②切片默认只能从左往右切
#    ③如果想右->左切，则需要step调节为-1.但顺序就是倒着来的
# 3.相乘和相加（前提类型相同）
# 4.支持 in 判断是否存在


print("="*30)
### 索引和切片
print(names1[0])    # 张三
print(type(names1[0])) #<class 'str'>
print(names1[0:3])  #['张三', '李四', '王五']
print(names1[:3])   #['张三', '李四', '王五']
print(names1[0::2]) #['张三', '王五']
print(names1*2)     #三', '李四', '王五', '王二麻子', '张三', '李四', '王五', '王二麻子']
print(names1[-3:])  #['李四', '王五', '王二麻子']

# 因为步长-1，所以从右往左切，
# 在根据前闭后开，所以-1是可以取到的“王二麻子”,取不到-3 李四
# 所以结果是： ['王二麻子', '王五']
print(names1[-1:-3:-1])
# 因为默认step是1 从左往右切，所以4开始 但是1 不在4右边变，所以切不到内容
# 所以切不到内容故结果是 []   空的 【重点】
print(names1[4:1])



# 3.相乘  相加
# 相乘：(可以 * int类型的)
# ['张三', '李四', '王五', '王二麻子', '张三', '李四', '王五', '王二麻子']
print(names1*2)
# 列表不能*列表 只能* int类型数字
# print(names1*[2,3]) #

# 相加：必须类型匹配
# print(names1+2)   #类型不匹配
# print(names1+"2") #类型不匹配
# ['张三', '李四', '王五', '王二麻子', 2, True, False, 'ss']
print(names1+[2,True,False,"ss"])

# in 判断是否存在
print("王二麻子" in names1)
print( True in (names1 + [True]) )


# python列表和别的语言的区别
# 数组：数组中的数据类型必须是一样的
# python的列表中的类型可以放多种数据类型（所有类型）

s3 = ["123",True,"yuan",2]
print(123 in s3) # False 因为python中不支持类型转化，所以“123”和123 是不相同的
print("123" in s3)  #True


list